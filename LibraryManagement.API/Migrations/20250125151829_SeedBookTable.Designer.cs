// <auto-generated />
using System;
using LibraryManagement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.API.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250125151829_SeedBookTable")]
    partial class SeedBookTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("LibraryManagement.Business.Models.Domain.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "J. K. Rowling",
                            Category = "Fantasy",
                            IsAvailable = true,
                            Title = "Philosopher's Stone"
                        },
                        new
                        {
                            Id = 2,
                            Author = "J. K. Rowling",
                            Category = "Fantasy",
                            IsAvailable = true,
                            Title = "Chamber of Secrets"
                        },
                        new
                        {
                            Id = 3,
                            Author = "J. K. Rowling",
                            Category = "Fantasy",
                            IsAvailable = true,
                            Title = "Prisoner of Azkaban"
                        },
                        new
                        {
                            Id = 4,
                            Author = "J. K. Rowling",
                            Category = "Fantasy",
                            IsAvailable = true,
                            Title = "Goblet of Fire"
                        },
                        new
                        {
                            Id = 5,
                            Author = "J. R. R. Tolkien",
                            Category = "Fantasy",
                            IsAvailable = true,
                            Title = "The Fellowship of the Ring"
                        },
                        new
                        {
                            Id = 6,
                            Author = "J. R. R. Tolkien",
                            Category = "Fantasy",
                            IsAvailable = true,
                            Title = "The Two Towers"
                        },
                        new
                        {
                            Id = 7,
                            Author = "J. R. R. Tolkien",
                            Category = "Fantasy",
                            IsAvailable = true,
                            Title = "The Return of the King"
                        },
                        new
                        {
                            Id = 8,
                            Author = "George Orwell",
                            Category = "Dystopian",
                            IsAvailable = true,
                            Title = "1984"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Business.Models.Domain.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("LibraryManagement.Business.Models.Domain.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BorrowedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReturnedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("LibraryManagement.Business.Models.Domain.Transaction", b =>
                {
                    b.HasOne("LibraryManagement.Business.Models.Domain.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Business.Models.Domain.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });
#pragma warning restore 612, 618
        }
    }
}
